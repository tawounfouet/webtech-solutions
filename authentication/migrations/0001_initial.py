# Generated by Django 4.2.7 on 2025-06-20 15:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sessions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Required. Enter a valid email address.', max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, help_text='Optional. Username for display purposes.', max_length=150, null=True, verbose_name='Username')),
                ('is_email_verified', models.BooleanField(default=False, help_text='Designates whether this user has verified their email address.', verbose_name='Email Verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Tell us about yourself.', max_length=500, verbose_name='Biography')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1, verbose_name='Gender')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Preferred Language')),
                ('is_profile_public', models.BooleanField(default=False, help_text='Make profile visible to other users.', verbose_name='Public Profile')),
                ('receive_notifications', models.BooleanField(default=True, help_text='Receive email notifications.', verbose_name='Receive Notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'auth_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(help_text='IP address from which the session was created.', verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, help_text='Browser/client information.', verbose_name='User Agent')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Session Created')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last Activity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_suspicious', models.BooleanField(default=False, help_text='Flag for potentially suspicious login activity.', verbose_name='Suspicious Activity')),
                ('login_method', models.CharField(default='password', help_text='Method used for authentication (password, social, etc.)', max_length=50, verbose_name='Login Method')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_session_info', to='sessions.session', verbose_name='Django Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'auth_user_session',
                'indexes': [models.Index(fields=['user', 'created_at'], name='auth_user_s_user_id_c15a3e_idx'), models.Index(fields=['ip_address'], name='auth_user_s_ip_addr_66c9b6_idx'), models.Index(fields=['is_active'], name='auth_user_s_is_acti_5619e8_idx')],
            },
        ),
    ]
